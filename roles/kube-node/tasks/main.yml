--- 
- name: sysctl enable ipv4 forwarding, bridge call iptables, and max map count
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
    sysctl_file: "{{ kube_sysctl_file }}"
  with_items:
    - { name: "net.ipv4.ip_forward", value: 1 }
    - { name: "net.bridge.bridge-nf-call-iptables", value: 1 }
    - { name: "vm.max_map_count", value: 262144 }
  notify: kube sysctl reload

- name: net-tools
  yum:
    name: net-tools
    state: present

- name: conntrack
  yum:
    name: conntrack
    state: present

- name: remove swapfile from /etc/fstab
  mount:
    name: swap
    fstype: swap
    state: absent

- name: disable swap
  command: swapoff -a
  ignore_errors: yes
  changed_when: false

- name: disable selinux
  selinux:
    state: disabled

- name: kubernetes kube user
  user:
    name: kube

- name: kubernetes directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ kube_config_dir }}/manifests"
    - "{{ kube_config_dir }}/pki"
    - "{{ kube_config_dir }}/net"
    - "{{ kube_config_dir }}/roles"
    - /var/lib/kubelet/pki
    - /etc/systemd/system/kubelet.service.d
    - /etc/systemd/system/kube-proxy.service.d
    - /etc/cni/net.d
    - /opt/cni/bin

- include: get-bin.yml

- include: certs.yml

- name: kubelet systemd service file
  template:
    src: systemd/kubelet.service.j2
    dest: /etc/systemd/system/kubelet.service

- name: kubelet systemd environment file
  template:
    src: systemd/kubelet.conf.j2
    dest: /etc/systemd/system/kubelet.service.d/kubelet.conf

- name: kubelet kubeconfig file
  template:
    src: etc/kubelet.config.j2
    dest: "{{ kube_config_dir }}/kubelet.config"

- name: kube-proxy systemd service file
  template:
    src: systemd/kube-proxy.service.j2
    dest: /etc/systemd/system/kube-proxy.service

- name: kube-proxy systemd environment file
  template:
    src: systemd/kube-proxy.conf.j2
    dest: /etc/systemd/system/kube-proxy.service.d/kube-proxy.conf

- name: kube-proxy kubeconfig file
  template:
    src: etc/proxy.config.j2
    dest: "{{ kube_config_dir }}/proxy.config"

- include: docker-creds.yml
  when: kube_has_docker_reg_creds
  
- name: kubelet service
  systemd:
    name: kubelet
    state: started
    enabled: yes
    daemon_reload: yes

- name: kube-proxy
  systemd:
    name: kube-proxy
    state: started
    enabled: yes
    daemon_reload: yes