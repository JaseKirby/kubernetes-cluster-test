apiVersion: v1
kind: Pod
metadata:
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ""
  creationTimestamp: null
  labels:
    component: etcd
    tier: control-plane
  name: etcd
  namespace: kube-system
spec:
  containers:
  - command:
    - etcd
    - --name={{ inventory_hostname }}
    - --cert-file=/etc/kubernetes/pki/kubernetes.crt
    - --key-file=/etc/kubernetes/pki/kubernetes.key
    - --peer-cert-file=/etc/kubernetes/pki/kubernetes.crt
    - --peer-key-file=/etc/kubernetes/pki/kubernetes.key
    - --trusted-ca-file=/etc/kubernetes/pki/ca.crt
    - --peer-trusted-ca-file=/etc/kubernetes/pki/ca.crt
    - --peer-client-cert-auth
    - --client-cert-auth
    - --initial-advertise-peer-urls=https://{{ host_ip }}:2380
    - --listen-peer-urls=https://{{ host_ip }}:2380
    - --listen-client-urls=https://{{ host_ip }}:2379,http://127.0.0.1:2379
    - --advertise-client-urls=https://{{ host_ip }}:2379
    - --initial-cluster-token=etcd-cluster-0
    - --initial-cluster={% for host in groups['kube-masters'] %}{{inventory_hostname}}=https://{{hostvars[host].host_ip }}:2380{% if not loop.last %},{% endif %}{% endfor %}

    - --initial-cluster-state=new
    - --data-dir=/var/lib/etcd
    image: {{ kube_etcd_image }}
    livenessProbe:
      failureThreshold: 8
      httpGet:
        host: 127.0.0.1
        path: /health
        port: 2379
        scheme: HTTP
      initialDelaySeconds: 15
      timeoutSeconds: 15
    name: etcd
    resources: {}
    volumeMounts:
    - mountPath: /var/lib/etcd
      name: etcd
    - mountPath: /etc/kubernetes/pki
      name: k8s-certs
      readOnly: true
  hostNetwork: true
  volumes:
  - hostPath:
      path: /var/lib/etcd
      type: DirectoryOrCreate
    name: etcd
  - hostPath:
      path: /etc/kubernetes/pki
      type: DirectoryOrCreate
    name: k8s-certs
status: {}