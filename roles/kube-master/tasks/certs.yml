---

- name: certificate authority private key
  shell: openssl genrsa -out ca.key 2048
  args:
    chdir: "{{ kube_config_dir }}/pki/"
    creates: ca.key

- name: certificate authority public cert ca.crt
  shell: openssl req -x509 -new -nodes -key ca.key -subj "/CN={{ kube_primary_master_ip }}" -days 10000 -out ca.crt
  args:
    chdir: "{{ kube_config_dir }}/pki/"
    creates: ca.crt

- name: apiserver private key apiserver.key
  shell: openssl genrsa -out apiserver.key 2048
  args:
    chdir: "{{ kube_config_dir }}/pki/"
    creates: apiserver.key

- name: certificate signing config file csr.conf
  template:
    src: etc/pki/csr.conf.j2
    dest: "{{ kube_config_dir }}/pki/csr.conf"

- name: apiserver certificate signing request apiserver.csr
  shell: openssl req -new -key apiserver.key -subj "/CN={{ kube_primary_master_ip }}" -out apiserver.csr 
  args:
    chdir: "{{ kube_config_dir }}/pki/"
    creates: apiserver.csr

- name: apiserver certficate generation from certificate authority
  shell: openssl x509 -req -in apiserver.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out apiserver.crt -days {{ kube_cert_expires_in_days }} -extensions v3_ext -extfile csr.conf
  args:
    chdir: "{{ kube_config_dir }}/pki/"
    creates: apiserver.crt

- name: create service account key pair
  shell: openssl req -newkey rsa:2048 -nodes -keyout sa.key -x509 -days {{ kube_cert_expires_in_days }} -out sa.pub
  args:
    chdir: "{{ kube_config_dir }}/pki/"
    creates: sa.key

- name: kubelet client private key apiserver-kubelet-client.key
  shell: openssl genrsa -out apiserver-kubelet-client.key 2048
  args:
    chdir: "{{ kube_config_dir }}/pki/"
    creates: apiserver-kubelet-client.key

- name: create kubelet client certificate signing request
  shell: openssl req -new -key apiserver-kubelet-client.key -out apiserver-kubelet-client.csr -subj "/CN=kubelet-client/O=kubelet-client"
  args:
    chdir: "{{ kube_config_dir }}/pki/"
    creates: "apiserver-kubelet-client.csr"

- name: kubelet client certificate signing by authority apiserver-kubelet-client.crt
  shell: openssl x509 -req -in apiserver-kubelet-client.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out apiserver-kubelet-client.crt -days 10000
  args:
    chdir: "{{ kube_config_dir }}/pki/"
    creates: apiserver-kubelet-client.crt

- name: kube-proxy private key proxy.key
  shell: openssl genrsa -out proxy.key 2048
  args:
    chdir: "{{ kube_config_dir }}/pki/"
    creates: proxy.key

- name: create kube-proxy certificate signing request proxy.csr
  shell: openssl req -new -key proxy.key -out proxy.csr -subj "/CN=system:kube-proxy/O=system:node-proxier"
  args:
    chdir: "{{ kube_config_dir }}/pki/"
    creates: "proxy.csr"

- name: kube-proxy certificate signing by authority proxy.crt
  shell: openssl x509 -req -in proxy.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out proxy.crt -days 10000
  args:
    chdir: "{{ kube_config_dir }}/pki/"
    creates: proxy.crt

# distribute all keys out to nodes