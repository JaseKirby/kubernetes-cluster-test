---

- name: certificate authority private key
  shell: openssl genrsa -out ca.key 2048
  args:
    chdir: "{{ kube_config_dir }}/pki/"
    creates: ca.key

- name: certificate authority public cert ca.crt
  shell: openssl req -x509 -new -nodes -key ca.key -subj "/CN={{ kube_primary_master_ip }}" -days 10000 -out ca.crt
  args:
    chdir: "{{ kube_config_dir }}/pki/"
    creates: ca.crt

- name: apiserver private key apiserver.key
  shell: openssl genrsa -out apiserver.key 2048
  args:
    chdir: "{{ kube_config_dir }}/pki/"
    creates: apiserver.key

- name: certificate signing config file csr.conf
  template:
    src: etc/pki/csr.conf.j2
    dest: "{{ kube_config_dir }}/pki/csr.conf"

- name: apiserver certficate generation from certificate authority
  shell: openssl x509 -req -in apiserver.key -CA ca.crt -CAkey ca.key -CAcreateserial -out apiserver.crt -days {{ kube_cert_expires_in_days }} -extensions v3_ext -extfile csr.conf
  args:
    chdir: "{{ kube_config_dir }}/pki/"
    creates: apiserver.crt

- name: create service account key pair
  shell: openssl req -newkey rsa:2048 -nodes -keyout sa.key -x509 -days {{ kube_cert_expires_in_days }} -out sa.pub
  args:
    chdir: "{{ kube_config_dir }}/pki/"
    creates: sa.key

# - name: create apiserver kubelet key pair
#   shell: openssl req -newkey rsa:2048 -nodes -keyout apiserver-kubelet-client.key -x509 -days {{ kube_cert_expires_in_days }} -out apiserver-kubelet-client.crt
#   args:
#     chdir: "{{ kube_config_dir }}/pki/"
#     creates: apiserver-kubelet-client.key

