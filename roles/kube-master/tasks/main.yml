---
- name: net-tools
  yum:
    name: net-tools
    state: present
    
- name: enable ipv4 forwarding sysctl
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    state: present

- name: remove swapfile from /etc/fstab
  mount:
    name: swap
    fstype: swap
    state: absent

- name: disable swap
  command: swapoff -a
  when: ansible_swaptotal_mb > 0

# sestatus to check
- name: disable selinux
  selinux:
    state: disabled

- name: kubernetes binaries
  copy:
    src: /vagrant/private/repo/kubernetes/server/bin/{{ item }}
    dest: /usr/bin/{{ item }}
    mode: 744
  with_items:
    - kubelet
    - kube-proxy
    - kubectl

- name: kubernetes kube user
  user:
    name: kube

- name: kubernetes config directory
  file:
    path: "{{ kubernetes_config_dir }}"
    state: directory

- name: kubernetes srv directory
  file:
    path: "{{ kubernetes_srv_dir }}"
    state: directory

- name: kubernetes base config file
  template:
    src: etc/config.j2
    dest: "{{ kubernetes_config_dir}}/config"

- name: kubelet working directory
  file:
    path: /var/lib/kubelet
    state: directory
    owner: kube

- name: kubelet config file
  template:
    src: etc/kubelet.j2
    dest: "{{ kubernetes_config_dir }}/kubelet"

- name: kubelet kubeconfig file
  template:
    src: kubeconfig.kubelet.j2
    dest: /var/lib/kubelet/kubeconfig

- name: kubelet config manifests directory
  file:
    path: /etc/kubernetes/manifests
    state: directory

- name: kube-proxy working directory
  file:
    path: /var/lib/kube-proxy
    state: directory

- name: kube-proxy config file
  template:
    src: etc/proxy.j2
    dest: "{{ kubernetes_config_dir }}/proxy"

- name: kube-proxy kubeconfig file
  template:
    src: kubeconfig.kube-proxy.j2
    dest: /var/lib/kube-proxy/kubeconfig

- name: kubernetes service files
  template:
    src: "{{ item }}.j2"
    dest: /etc/systemd/system/{{ item }}
  with_items:
    - kubelet.service
    - kube-proxy.service

# - name: kubelet service
#   systemd:
#     name: kubelet
#     state: started
#     enabled: yes
#     daemon_reload: yes

# - name: kube-proxy service
#   systemd:
#     name: kube-proxy
#     state: started
#     enabled: yes
#     daemon_reload: yes

- name: etcd manifest file
  template:
    src: etcd.manifest.j2
    dest: /etc/kubernetes/manifests/etcd.manifest

# etcd-events manifest file

- name: apiserver manifest file
  template:
    src: kube-apiserver.manifest.j2
    dest: /etc/kubernetes/manifests/kube-apiserver.manifest

- name: scheduler manifest file
  template:
    src: kube-scheduler.manifest.j2
    dest: /etc/kubernetes/manifests/kube-scheduler.manifest

- name: controller-manager manifest file
  template:
    src: kube-controller-manager.manifest.j2
    dest: /etc/kubernetes/manifests/kube-controller-manager.manifest

# start kube-proxy with apiserver now up

# kubectl to talk to apiserver
# set auto completion for kubectl
# set ~/.kube/config kubeconfig file for root user

# kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
# kubectl -n kube-system delete -f weave.manifest
- name: weave manifest file
  template:
    src: weave.manifest.j2
    dest: /root/weave.manifest
